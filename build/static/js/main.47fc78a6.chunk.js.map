{"version":3,"sources":["components/Seekbar.jsx","components/SettingOptions.jsx","VideoPlayer.jsx","assets/Placeholder-Video.mp4","App.jsx","index.js"],"names":["Seekbar","currentTime","fullLength","mouseDownOnSeekbarUpdater","touchSeek","hoveredTimeUpdater","mouseDownOnSeekbar","loadedTime","hoveredTime","hoveredLengthUpdater","hoveredLength","formatTime","useState","seekbarHovered","seekbarHoveredUpdater","seekbarRef","useRef","className","role","aria-valuenow","onMouseDown","e","ref","onMouseUp","onMouseMove","nativeEvent","offsetX","currentTarget","offsetWidth","onMouseLeave","style","width","display","left","current","SettingOptions","React","forwardRef","settingsRef","options","displaySettingsUpdater","playbackRate","useEffect","document","addEventListener","path","includes","querySelector","tabIndex","map","name","replace","toString","onClick","function","VideoPlayer","video","mainRef","title","vidRef","ctrlRef","settingRef","firstRendered","firstRenderedUpdater","fullLengthUpdater","currentTimeUpdater","loadedTimeUpdater","vidState","vidStateUpdater","vidVolume","vidVolumeUpdater","isLoading","isLoadingUpdater","vidVolumeLast","vidVolumeLastUpdater","isFullscreen","isFullscreenUpdater","displaySettings","playbackRateUpdater","toggleVidState","pass","updateBufferedTime","percentVidLoaded","buffered","length","end","duration","i","Math","min","max","changeVolume","vol","parseFloat","timeinsec","parseInt","sec","hour","key","preventDefault","click","ctrlKey","play","pause","volume","trailWidth","trail","getComputedStyle","getPropertyValue","requestFullscreen","fullscreenElement","exitFullscreen","settingOptions","type","id","onDoubleClick","height","cx","cy","r","src","onLoadStart","onLoadedMetadata","visibilityState","handler","removeEventListener","onProgress","readyState","onTimeUpdate","onAuxClick","onPause","onPlay","val","seektime","data-state","data-title","xmlns","viewBox","fill","d","onWheel","deltaY","valueAsNumber","value","onChange","target","setTimeout","focus","pictureInPictureElement","requestPictureInPicture","exitPictureInPicture","App","link","linkUpadter","file","files","fileLink","URL","createObjectURL","revokeObjectURL","onSubmit","placeholder","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47fc78a6.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst Seekbar = ({\n    currentTime,\n    fullLength,\n    mouseDownOnSeekbarUpdater,\n    touchSeek,\n    hoveredTimeUpdater,\n    mouseDownOnSeekbar,\n    loadedTime,\n    hoveredTime,\n    hoveredLengthUpdater,\n    hoveredLength,\n    formatTime,\n}) => {\n    const [seekbarHovered, seekbarHoveredUpdater] = useState(false);\n    const seekbarRef = useRef(null);\n    return (\n        <div\n            className=\"seekbar\"\n            role=\"slider\"\n            aria-valuenow={(currentTime * 100) / fullLength || 0}\n            onMouseDown={(e) => {\n                mouseDownOnSeekbarUpdater(true);\n                touchSeek(e);\n            }}\n            ref={seekbarRef}\n            onMouseUp={() => mouseDownOnSeekbarUpdater(false)}\n            onMouseMove={(e) => {\n                hoveredLengthUpdater(e.nativeEvent.offsetX);\n                hoveredTimeUpdater(\n                    (e.nativeEvent.offsetX / e.currentTarget.offsetWidth) *\n                        fullLength\n                );\n                seekbarHoveredUpdater(true);\n\n                if (mouseDownOnSeekbar) touchSeek(e);\n            }}\n            onMouseLeave={() => {\n                hoveredLengthUpdater(0);\n                hoveredTimeUpdater(0);\n                seekbarHoveredUpdater(false);\n                mouseDownOnSeekbarUpdater(false);\n            }}\n        >\n            <span className=\"full\"></span>\n            <span\n                className=\"loaded\"\n                style={{\n                    width: `${(loadedTime * 100) / fullLength}%`,\n                }}\n            ></span>\n            <span\n                className=\"hover\"\n                style={{\n                    width: `${hoveredLength}px`,\n                }}\n            ></span>\n            <span\n                className=\"current\"\n                style={{\n                    width: `${(currentTime * 100) / fullLength}%`,\n                }}\n            ></span>\n            <div\n                className=\"hoveredTime\"\n                style={{\n                    display: seekbarHovered ? \"block\" : \"none\",\n                    left:\n                        hoveredLength < 20\n                            ? 20\n                            : hoveredLength >\n                              seekbarRef.current.offsetWidth - 20\n                            ? seekbarRef.current.offsetWidth - 20\n                            : hoveredLength,\n                }}\n            >\n                {formatTime(hoveredTime)}\n            </div>\n        </div>\n    );\n};\n\nexport default Seekbar;\n","import React, { useEffect } from \"react\";\n\nconst SettingOptions = React.forwardRef(\n    (\n        { display, options, displaySettingsUpdater, playbackRate },\n        settingsRef\n    ) => {\n        useEffect(() => {\n            document.addEventListener(\"mousedown\", (e) => {\n                if (\n                    !e.path.includes(settingsRef.current) &&\n                    !e.path.includes(\n                        document.querySelector(\"#videoPlayer .settingBtn\")\n                    )\n                )\n                    displaySettingsUpdater(false);\n            });\n        }, []);\n        return (\n            <div\n                className=\"settingOptions\"\n                ref={settingsRef}\n                style={{ display: display }}\n                tabIndex=\"-1\"\n            >\n                {options.map((e) => {\n                    return (\n                        <div className=\"optionTab\" key={e.name}>\n                            <h3>{e.name}</h3>\n                            {e.options.map((e) => {\n                                return (\n                                    <div\n                                        className={\n                                            \"options \" +\n                                            (e.name.replace(\"x\", \"\") ===\n                                            playbackRate.toString()\n                                                ? \"selected\"\n                                                : \"\")\n                                        }\n                                        key={e.name}\n                                        onClick={e.function}\n                                    >\n                                        {e.name}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n);\n\nexport default SettingOptions;\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Seekbar from \"./components/Seekbar\";\r\nimport SettingOptions from \"./components/SettingOptions\";\r\nconst VideoPlayer = ({ video, title }) => {\r\n    const mainRef = useRef(null);\r\n    const vidRef = useRef(null);\r\n    const ctrlRef = useRef(null);\r\n    const settingRef = useRef(null);\r\n    const [firstRendered, firstRenderedUpdater] = useState(false);\r\n    const [fullLength, fullLengthUpdater] = useState(0);\r\n    const [currentTime, currentTimeUpdater] = useState(0);\r\n    const [hoveredTime, hoveredTimeUpdater] = useState(0);\r\n    const [hoveredLength, hoveredLengthUpdater] = useState(0);\r\n    const [loadedTime, loadedTimeUpdater] = useState(0);\r\n    const [vidState, vidStateUpdater] = useState(\"paused\");\r\n    const [vidVolume, vidVolumeUpdater] = useState(0.5);\r\n    const [isLoading, isLoadingUpdater] = useState(false);\r\n    const [vidVolumeLast, vidVolumeLastUpdater] = useState(0.5);\r\n    const [isFullscreen, isFullscreenUpdater] = useState(false);\r\n    const [displaySettings, displaySettingsUpdater] = useState(false);\r\n    const [playbackRate, playbackRateUpdater] = useState(1);\r\n    const [mouseDownOnSeekbar, mouseDownOnSeekbarUpdater] = useState(false);\r\n    const toggleVidState = (pass) => {\r\n        if (pass || firstRendered) {\r\n            if (vidState === \"playing\") return vidStateUpdater(\"paused\");\r\n            if (vidState === \"paused\") return vidStateUpdater(\"playing\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        vidStateUpdater(\"paused\");\r\n    }, [video]);\r\n    const updateBufferedTime = () => {\r\n        let percentVidLoaded = 0;\r\n        if (\r\n            vidRef.current.buffered.length > 0 &&\r\n            vidRef.current.buffered.end &&\r\n            vidRef.current.duration\r\n        ) {\r\n            if (vidRef.current.buffered.length > 1) {\r\n                for (let i = vidRef.current.buffered.length - 1; i > 0; i--) {\r\n                    if (\r\n                        currentTime > vidRef.current.buffered.end(i - 1) &&\r\n                        vidRef.current.buffered.end(i) > currentTime\r\n                    ) {\r\n                        percentVidLoaded = vidRef.current.buffered.end(i);\r\n                    }\r\n                }\r\n            } else {\r\n                percentVidLoaded = vidRef.current.buffered.end(0);\r\n            }\r\n        }\r\n        if (percentVidLoaded) {\r\n            percentVidLoaded = Math.min(\r\n                vidRef.current.duration,\r\n                Math.max(0, percentVidLoaded)\r\n            );\r\n            loadedTimeUpdater(percentVidLoaded);\r\n        }\r\n    };\r\n    const seekVideo = (val, pass) => {\r\n        if (firstRendered || pass) {\r\n            if (val >= 0 && val <= fullLength) {\r\n                vidRef.current.currentTime = val;\r\n                currentTimeUpdater(val);\r\n                updateBufferedTime();\r\n            }\r\n        }\r\n    };\r\n    const touchSeek = (e) => {\r\n        let seektime =\r\n            (e.nativeEvent.offsetX /\r\n                ctrlRef.current?.querySelector(\".seekbar\").offsetWidth) *\r\n            fullLength;\r\n        seekVideo(seektime);\r\n    };\r\n    const changeVolume = (vol) => {\r\n        vidVolumeUpdater(parseFloat(Math.max(0, Math.min(1, vol))) || 0);\r\n    };\r\n\r\n    const formatTime = (timeinsec) => {\r\n        if (timeinsec < 60)\r\n            return `00:${\r\n                parseInt(timeinsec).toString().length < 2\r\n                    ? 0 + parseInt(timeinsec).toString()\r\n                    : parseInt(timeinsec).toString()\r\n            }`;\r\n        if (timeinsec > 60 && timeinsec < 3600) {\r\n            let min = parseInt(timeinsec / 60);\r\n            let sec = parseInt((timeinsec / 60 - min) * 60);\r\n            return `${\r\n                min.toString().length < 2 ? 0 + min.toString() : min.toString()\r\n            }:${\r\n                sec.toString().length < 2 ? 0 + sec.toString() : sec.toString()\r\n            }`;\r\n        }\r\n        if (timeinsec > 3600) {\r\n            let hour = parseInt(timeinsec / 3600);\r\n            let min = parseInt((timeinsec / 60 - hour) * 60);\r\n            let sec = parseInt((timeinsec / 60 - min) * 60);\r\n            return `${hour.toString()}:${\r\n                min.toString().length < 2 ? 0 + min.toString() : min.toString()\r\n            }:${\r\n                sec.toString().length < 2 ? 0 + sec.toString() : sec.toString()\r\n            }`;\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        firstRenderedUpdater(true);\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            switch (e.key) {\r\n                case \" \":\r\n                    e.preventDefault();\r\n                    ctrlRef.current.querySelector(\".playpause\").click();\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    ctrlRef.current.querySelector(\".skipNext\").click();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                    ctrlRef.current.querySelector(\".skipPrev\").click();\r\n                    break;\r\n                case \"ArrowUp\":\r\n                    ctrlRef.current.querySelector(\".audiorange .volUp\").click();\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    ctrlRef.current\r\n                        .querySelector(\".audiorange .volDown\")\r\n                        .click();\r\n                    break;\r\n                case \"m\":\r\n                    ctrlRef.current.querySelector(\".volume\").click();\r\n                    break;\r\n                case \"f\":\r\n                    if (!e.ctrlKey)\r\n                        ctrlRef.current.querySelector(\".fullscreen\").click();\r\n                    break;\r\n                case \"Escape\":\r\n                    isFullscreen(false);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (vidState === \"playing\") vidRef.current?.play();\r\n        if (vidState === \"paused\") vidRef.current?.pause();\r\n    }, [vidState]);\r\n    useEffect(() => {\r\n        if (vidRef.current !== null) vidRef.current.volume = vidVolume;\r\n        let trail = ctrlRef.current.querySelector(\".audiorange .trail\");\r\n        let width = parseFloat(\r\n            getComputedStyle(trail).getPropertyValue(\"max-width\")\r\n        );\r\n        let trailWidth;\r\n        if (width === 0) trailWidth = 0;\r\n        else trailWidth = (vidVolume * 10000) / width;\r\n        trail.style.width = `${trailWidth}px`;\r\n    }, [vidVolume]);\r\n    useEffect(() => {\r\n        if (isFullscreen) mainRef.current?.requestFullscreen();\r\n        else if (document.fullscreenElement) document.exitFullscreen();\r\n    }, [isFullscreen]);\r\n    useEffect(() => {\r\n        if (vidRef.current) vidRef.current.playbackRate = playbackRate;\r\n    }, [playbackRate]);\r\n    const settingOptions = [\r\n        {\r\n            name: \"Speed\",\r\n            type: \"radio\",\r\n            options: [\r\n                {\r\n                    name: \"x1\",\r\n                    function: function () {\r\n                        playbackRateUpdater(1);\r\n                    },\r\n                },\r\n                {\r\n                    name: \"x1.25\",\r\n                    function: function () {\r\n                        playbackRateUpdater(1.25);\r\n                    },\r\n                },\r\n                {\r\n                    name: \"x1.5\",\r\n                    function: function () {\r\n                        playbackRateUpdater(1.5);\r\n                    },\r\n                },\r\n                {\r\n                    name: \"x1.75\",\r\n                    function: function () {\r\n                        playbackRateUpdater(1.75);\r\n                    },\r\n                },\r\n                {\r\n                    name: \"x2\",\r\n                    function: function () {\r\n                        playbackRateUpdater(2);\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n    return (\r\n        <div id=\"videoPlayer\" ref={mainRef}>\r\n            <div\r\n                className=\"vidCont\"\r\n                onClick={() => {\r\n                    toggleVidState();\r\n                }}\r\n                onDoubleClick={() => {\r\n                    isFullscreenUpdater(!isFullscreen);\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"loading\"\r\n                    style={{ display: isLoading ? \"block\" : \"none\" }}\r\n                >\r\n                    <svg height=\"80\" width=\"80\">\r\n                        <circle cx=\"40\" cy=\"40\" r=\"35\" />\r\n                    </svg>\r\n                </div>\r\n                <video\r\n                    src={video}\r\n                    className=\"video\"\r\n                    ref={vidRef}\r\n                    onLoadStart={() => {\r\n                        isLoadingUpdater(true);\r\n                    }}\r\n                    onLoadedMetadata={() => {\r\n                        fullLengthUpdater(vidRef.current.duration);\r\n                        if (document.visibilityState === \"visible\") {\r\n                            vidStateUpdater(\"playing\");\r\n                        } else {\r\n                            document.addEventListener(\r\n                                \"visibilitychange\",\r\n                                function handler(e) {\r\n                                    if (\r\n                                        document.visibilityState === \"visible\"\r\n                                    ) {\r\n                                        vidStateUpdater(\"playing\");\r\n                                        document.removeEventListener(\r\n                                            e.type,\r\n                                            handler\r\n                                        );\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }}\r\n                    onProgress={() => {\r\n                        updateBufferedTime();\r\n                        if (vidRef.current.readyState <= 2) {\r\n                            isLoadingUpdater(true);\r\n                        } else isLoadingUpdater(false);\r\n                    }}\r\n                    onTimeUpdate={() => {\r\n                        currentTimeUpdater(vidRef.current.currentTime);\r\n                        if (isLoading) {\r\n                            if (vidRef.current.readyState <= 2) {\r\n                                isLoadingUpdater(true);\r\n                            } else isLoadingUpdater(false);\r\n                        }\r\n                    }}\r\n                    onAuxClick={() => {\r\n                        toggleVidState();\r\n                    }}\r\n                    onPause={() => vidStateUpdater(\"paused\")}\r\n                    onPlay={() => vidStateUpdater(\"playing\")}\r\n                    // controls\r\n                ></video>\r\n            </div>\r\n            <div className=\"controls\" ref={ctrlRef}>\r\n                <Seekbar\r\n                    currentTime={currentTime}\r\n                    fullLength={fullLength}\r\n                    mouseDownOnSeekbarUpdater={mouseDownOnSeekbarUpdater}\r\n                    touchSeek={touchSeek}\r\n                    hoveredTimeUpdater={hoveredTimeUpdater}\r\n                    hoveredLengthUpdater={hoveredLengthUpdater}\r\n                    mouseDownOnSeekbar={mouseDownOnSeekbar}\r\n                    loadedTime={loadedTime}\r\n                    hoveredTime={hoveredTime}\r\n                    hoveredLength={hoveredLength}\r\n                    formatTime={formatTime}\r\n                />\r\n                <div className=\"ctrlBtns\">\r\n                    <div className=\"left\">\r\n                        <button\r\n                            className=\"playpause\"\r\n                            data-state={vidState}\r\n                            data-title={\r\n                                vidState === \"playing\" ? \"Pause\" : \"Play\"\r\n                            }\r\n                            onClick={() => {\r\n                                vidStateUpdater(\r\n                                    vidState === \"playing\"\r\n                                        ? \"paused\"\r\n                                        : \"playing\"\r\n                                );\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"30px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"30px\"\r\n                                fill=\"#ffffff\"\r\n                            >\r\n                                {vidState === \"playing\" ? (\r\n                                    <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\r\n                                ) : (\r\n                                    <path d=\"M8 5v14l11-7z\" />\r\n                                )}\r\n                            </svg>\r\n                        </button>\r\n                        <button\r\n                            className=\"volume\"\r\n                            data-title=\"Mute\"\r\n                            onClick={() => {\r\n                                if (vidVolume === 0)\r\n                                    return changeVolume(vidVolumeLast);\r\n                                changeVolume(0);\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#ffffff\"\r\n                            >\r\n                                {vidVolume > 0.5 ? (\r\n                                    <path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\" />\r\n                                ) : vidVolume > 0.1 ? (\r\n                                    <path d=\"M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z\" />\r\n                                ) : vidVolume > 0 ? (\r\n                                    <path d=\"M7 9v6h4l5 5V4l-5 5H7z\" />\r\n                                ) : (\r\n                                    <path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\" />\r\n                                )}\r\n                            </svg>\r\n                        </button>\r\n                        <div\r\n                            className=\"audiorange\"\r\n                            onWheel={(e) => {\r\n                                if (e.deltaY < 0) {\r\n                                    ctrlRef.current\r\n                                        .querySelector(\".audiorange .volUp\")\r\n                                        .click();\r\n                                }\r\n                                if (e.deltaY > 0) {\r\n                                    ctrlRef.current\r\n                                        .querySelector(\".audiorange .volDown\")\r\n                                        .click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <span className=\"trail\"></span>\r\n                            <button\r\n                                style={{ display: \"none\" }}\r\n                                onClick={() => {\r\n                                    changeVolume(vidVolume - 0.1);\r\n\r\n                                    if (\r\n                                        ctrlRef.current.querySelector(\r\n                                            \".audiorange input\"\r\n                                        ).valueAsNumber !== 0\r\n                                    )\r\n                                        vidVolumeLastUpdater(\r\n                                            ctrlRef.current.querySelector(\r\n                                                \".audiorange input\"\r\n                                            ).valueAsNumber / 100\r\n                                        );\r\n                                }}\r\n                                className=\"volDown\"\r\n                            >\r\n                                slide-5\r\n                            </button>\r\n                            <button\r\n                                style={{ display: \"none\" }}\r\n                                onClick={() => {\r\n                                    changeVolume(vidVolume + 0.1);\r\n\r\n                                    if (\r\n                                        ctrlRef.current.querySelector(\r\n                                            \".audiorange input\"\r\n                                        ).valueAsNumber !== 0\r\n                                    )\r\n                                        vidVolumeLastUpdater(\r\n                                            ctrlRef.current.querySelector(\r\n                                                \".audiorange input\"\r\n                                            ).valueAsNumber / 100\r\n                                        );\r\n                                }}\r\n                                className=\"volUp\"\r\n                            >\r\n                                slide+5\r\n                            </button>\r\n                            <input\r\n                                type=\"range\"\r\n                                value={vidVolume * 100}\r\n                                min=\"0\"\r\n                                max=\"100\"\r\n                                onChange={(e) => {\r\n                                    vidVolumeUpdater(\r\n                                        e.target.valueAsNumber / 100\r\n                                    );\r\n                                }}\r\n                                onMouseUp={(e) => {\r\n                                    if (e.target.valueAsNumber !== 0)\r\n                                        vidVolumeLastUpdater(\r\n                                            e.target.valueAsNumber / 100\r\n                                        );\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            className=\"skipPrev\"\r\n                            data-title=\"-5s\"\r\n                            onClick={() => {\r\n                                vidRef.current.currentTime -= 5;\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"30px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"30px\"\r\n                                fill=\"#ffffff\"\r\n                            >\r\n                                <path d=\"M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button\r\n                            className=\"skipNext\"\r\n                            data-title=\"+5s\"\r\n                            onClick={() => {\r\n                                vidRef.current.currentTime += 5;\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"30px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"30px\"\r\n                                fill=\"#ffffff\"\r\n                            >\r\n                                <path d=\"M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <div className=\"time\">\r\n                            <span className=\"current\">\r\n                                {formatTime(currentTime)}\r\n                            </span>\r\n                            /\r\n                            <span className=\"total\">\r\n                                {formatTime(fullLength)}\r\n                            </span>\r\n                        </div>\r\n                        <button\r\n                            className=\"settingBtn\"\r\n                            data-title=\"Settings\"\r\n                            onClick={(e) => {\r\n                                if (!displaySettings) {\r\n                                    setTimeout((e) => {\r\n                                        settingRef.current.focus();\r\n                                    }, 200);\r\n                                }\r\n                                displaySettingsUpdater(!displaySettings);\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#ffffff\"\r\n                            >\r\n                                <path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <SettingOptions\r\n                            display={displaySettings ? \"flex\" : \"none\"}\r\n                            options={settingOptions}\r\n                            ref={settingRef}\r\n                            displaySettingsUpdater={displaySettingsUpdater}\r\n                            playbackRate={playbackRate}\r\n                        />\r\n                        <button\r\n                            className=\"picInPic\"\r\n                            data-title=\"Picture in Picture\"\r\n                            onClick={() => {\r\n                                if (!document.pictureInPictureElement)\r\n                                    return vidRef.current?.requestPictureInPicture();\r\n                                else document.exitPictureInPicture();\r\n                            }}\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"24px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"24px\"\r\n                                fill=\"#ffffff\"\r\n                            >\r\n                                <path d=\"M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button\r\n                            className=\"fullscreen\"\r\n                            onClick={() => {\r\n                                isFullscreenUpdater(!isFullscreen);\r\n                            }}\r\n                            data-title={\r\n                                isFullscreen ? \"Exit Fullscreen\" : \"Fullscreen\"\r\n                            }\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                height=\"30px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                width=\"30px\"\r\n                                fill=\"#ffffff\"\r\n                            >\r\n                                {isFullscreen ? (\r\n                                    <path d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\" />\r\n                                ) : (\r\n                                    <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\" />\r\n                                )}\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","export default __webpack_public_path__ + \"static/media/Placeholder-Video.df46c881.mp4\";","import React, { useState } from \"react\";\nimport VideoPlayer from \"./VideoPlayer\";\nimport video from \"./assets/Placeholder-Video.mp4\";\nconst App = () => {\n    const [link, linkUpadter] = useState(video);\n    return (\n        <div className=\"vidPlayerCont\">\n            <input\n                type=\"file\"\n                onChange={(e) => {\n                    let file = e.target.files[0];\n                    if (file.type === \"video/mp4\") {\n                        const fileLink = URL.createObjectURL(file);\n                        URL.revokeObjectURL(link);\n                        linkUpadter(fileLink);\n                    }\n                }}\n            />\n            or\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    linkUpadter(\n                        e.target.querySelector(\"input[type='text']\").value\n                    );\n                }}\n            >\n                <input type=\"text\" placeholder=\"url of mp4\" />\n                <input type=\"submit\" />\n            </form>\n            <VideoPlayer video={link} title=\"Video Title\" />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport VideoPlayer from \"./VideoPlayer\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}